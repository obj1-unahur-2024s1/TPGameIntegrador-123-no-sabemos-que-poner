import hogwarts.*
import estudiantesYcriaturas.*

class Hechizo {
	var property nivelDeDificultad = 0
	method puedeRealizarlo(estudiante) = false 
	
	method consecuencias(ser) {}
}

class HechizoComun inherits Hechizo {
	override method puedeRealizarlo(estudiante) = (estudiante.hechizosAprendidos().contains(self) and estudiante.nivelDeHabilidad() > 3)
	
	override method consecuencias(ser) {
		if (!ser.puedeLanzarHechizo()) {ser.salud(0.max(ser.salud() - (10 + nivelDeDificultad)))}
		else {}
	}
}

class HechizoImperdonable inherits Hechizo {
	var property nivelDeDano = 0
	
	override method puedeRealizarlo(estudiante) = estudiante.nivelDeHabilidad() > 7
	
	override method consecuencias(ser) {
		if (!ser.puedeLanzarHechizo() and !ser.esInmune()) ser.salud(0.max(ser.salud() - 20)) else {}
		if (ser.puedeLanzarHechizo()) ser.salud(0.max(ser.salud() - nivelDeDano))
	}
}

class HechizoSinPeligro inherits Hechizo {
	override method puedeRealizarlo(estudiante) = !estudiante.esPeligroso()
	
	override method consecuencias(ser) {
		if (ser.puedeLanzarHechizo()) ser.nivelDeHabilidad(0.max(ser.nivelDeHabilidad() - 1))
		if (!ser.puedeLanzarHechizo() and !ser.esInmune()) ser.salud(0.max(ser.salud() - (10 + nivelDeDificultad))) else {}
	}
}

class CambiusSombrerus inherits Hechizo {
	override method puedeRealizarlo(estudiante) = estudiante.sangre() == "pura"
	
	override method consecuencias(ser) {
		const casas = ["Gryffindor", "Slytherin", "Hufflepuff", "Ravenclaw"]
		
		if (ser.puedeLanzarHechizo())
			ser.casa(casas.first())
			casas.add(casas.first())
			casas.remove(casas.first())
			
	}
}