import pacientes.*

class Aparato {
	var property color = "blanco"
	
	method usar(persona) {}
	
	method puedeSerUsadoPor(persona) = null
	
	method necesitaMantenimiento() = false
	
	method darMantenimiento() {}
}

class Magneto inherits Aparato{
	var imantacion = 800
	
	override method usar(persona) {
		imantacion = 0.max(imantacion - 1)
		persona.nivelDeDolor(0.max(persona.nivelDeDolor() - (persona.nivelDeDolor() * 0.1)))
	}
	
	override method puedeSerUsadoPor(persona) = true
	
	override method necesitaMantenimiento() = imantacion < 100
	
	override method darMantenimiento() {
		imantacion = 800.min(imantacion + 500)
	}
}


class Bicicleta inherits Aparato {
	var tornillosDesajustados = 0
	var perdidaDeAceite = 0
	
	override method usar(persona) { 
		if (persona.nivelDeDolor() > 30) {tornillosDesajustados =+ 1} else 
		if (persona.nivelDeDolor() > 30 and persona.edad().between(30, 50)) {
			tornillosDesajustados =+ 1	perdidaDeAceite =+ 1}
		persona.nivelDeDolor(0.max(persona.nivelDeDolor() - 4))
		persona.nivelDeFortaleza(persona.nivelDeFortaleza() + 3)
	}
	
	override method puedeSerUsadoPor(persona) = persona.edad() > 8
	
	override method necesitaMantenimiento() = tornillosDesajustados >= 10 or perdidaDeAceite >= 5
	
	override method darMantenimiento() {
		tornillosDesajustados = 0
		perdidaDeAceite = 0
	}
}

class Minitramp inherits Aparato {
	override method usar(persona) {
		persona.nivelDeFortaleza(persona.nivelDeFortaleza() + (persona.edad() * 0.1))
	}
	
	override method puedeSerUsadoPor(persona) = persona.nivelDeDolor() < 20
	
}


