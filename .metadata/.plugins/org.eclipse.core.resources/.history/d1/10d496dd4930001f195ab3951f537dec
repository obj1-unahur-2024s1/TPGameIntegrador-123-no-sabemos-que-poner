import wollok.game.*
import juego.*
import items.*

const lasPartesDeSnake = []

class ParteDeSnake {
	var property aDondeIr = "right"
	var property siguienteaDondeIr = "right"
	var property nroDeParte = 0
	var property position = game.center()
	var property image = "cuerpo.png" //importa que sea una propiedad para que se abra el programa
	
	method conseguirSiguienteaDondeIr(){
		siguienteaDondeIr = (lasPartesDeSnake.find({p => p.nroDeParte() +1 == self.nroDeParte()}).aDondeIr())
	}
	method siguienteaDondeIr(direccion){
		siguienteaDondeIr = direccion
	}
	
	method siguienteaDondeIr(){
		return siguienteaDondeIr
	}
	
	
	method moverse(){
		self.conseguirSiguienteaDondeIr()
		if (aDondeIr == "left"){
			position = position.left(1)
		} if (aDondeIr == "up"){
			position = position.up(1)
		} if (aDondeIr == "right"){
			position = position.right(1)
		} if (aDondeIr == "down"){
			position = position.down(1)
		}
		aDondeIr = siguienteaDondeIr
		
	}
	
}

class Cola inherits ParteDeSnake {
}


class CabezaDeSnake inherits ParteDeSnake {
	var property puntos = 0
	const puntuaciones = []
	
	override method conseguirSiguienteaDondeIr(){
		keyboard.up().onPressDo(siguienteaDondeIr = "up")
		keyboard.down().onPressDo(siguienteaDondeIr = "down")
		keyboard.left().onPressDo(siguienteaDondeIr = "left")
		keyboard.right().onPressDo(siguienteaDondeIr = "right")
	}
	override method moverse(){
		if (aDondeIr == "left"){
			self.image("cabezaIzquierda.png") 
			position = position.left(1)
		} if (aDondeIr == "up"){
			self.image("cabezaArriba.png")
			position = position.up(1)
		} if (aDondeIr == "right"){
			self.image("cabezaDerecha.png")
			position = position.right(1)
		} if (aDondeIr == "down"){
			self.image("cabezaAbajo.png")
			position = position.down(1)
		}
		aDondeIr = siguienteaDondeIr
	}
	
	method morir() {
		puntuaciones.add(puntos)
		game.stop()
		game.addVisualIn("pantallaMuerte.", game.center())
		textoPuntos.asignarPuntaje(self.mejorPuntuacion())
		keyboard.enter().onPressDo({
			puntos = 0
			snake.reiniciarPartida()
		})
	}
	
	method mejorPuntuacion() = if (puntuaciones.isEmpty()) 0 else 
							   if (puntuaciones.max() < puntos) puntos else
							       puntuaciones.max()
}

object pantallaDeInicio {
	var property position = game.at(0,0)
	var property image = "fondoInicio.jpg"
		
	method iniciar() {
		game.addVisual(self)
		keyboard.enter().onPressDo({
			game.removeVisual(self)
			game.addVisualIn("fondoJuego.", game.center())
			snake.personaje()	
		})
	}
}

object textoPuntos {
	var cantidadPuntaje = 0
	
	method asignarPuntaje(numero) {cantidadPuntaje = numero}
	method text() = "maxima puntuacion" + cantidadPuntaje 
	method position() = game.at(game.width()/2, game.height() - 3)
	//method textColor() = "FF0000FF" probar colores
}


/*object jugador {
	
	var position = game.at(1,1)
	
	
	
	method position() = position
	method position(posicion){
		position = posicion
		
	}
	method image() = "cabeza.png"

	
	
	method moveArriba(){ 
		if (position.y()<14){
		self.position(position.up(1))
	}
		
	}
		
	method moveAbajo(){ 
		if (position.y()>0){
			self.position(position.down(1))
		}
		
	}
		
	method moveIzquierda(){ 
		if (position.x()>0){
			self.position(position.left(1))
		}
		
	}
		
	method moveDerecha(){ 
		if (position.x()<14){
			self.position(position.right(1))
		}
		
		
	}
		
	
}*/
/*class Cuerpo{
	
	var position = 0
	
	
	
	method image() = "cuerpo.png"
	method position() = position
	method position(posicion){
		position = posicion
	}
	
}*/
